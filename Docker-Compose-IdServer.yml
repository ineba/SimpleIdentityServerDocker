version: '2'
services:
 redis_idserver:
  image: redis
  ports:
    - "6379:6379"
 ambassador_idserver:
  image: cpuguy83/docker-grand-ambassador
  volumes:
   - "/var/run/docker.sock:/docker.sock"
  command: "-name idserver_1"
 idserver:
  build:
   dockerfile: Dockerfile-IdServer
   context: .
  ports:
   - "5443:5443"
  links:
   - postgresql_idserver:postgresql
   - configuration_idserver:configuration
   - ambassador_idserver:idserver
   - elasticsearch_idserver:elasticsearch
   - redis_idserver:redis
  depends_on:
   - "postgresql_idserver"
  environment:
   - DB_ALIAS=postgresql
   - DB_PORT=5432
 uma_idserver:
  build:
   dockerfile: Dockerfile-Uma-Https
   context: .
  ports:
   - "5445:5445"
  links:
   - postgresql_uma_idserver:postgresql
   - ambassador_idserver:idserver
   - elasticsearch_idserver:elasticsearch
   - redis_idserver:redis
  depends_on:
   - "postgresql_uma_idserver"
   - elasticsearch_idserver
  environment:
   - DB_ALIAS=postgresql
   - DB_PORT=5432
   - ASPNETCORE_ENVIRONMENT=idserver_docker
   - DATA_MIGRATED=true
 manager_idserver:
  build:
   dockerfile: Dockerfile-Manager-IdServer
   context: .
  links:
   - postgresql_idserver:postgresql
   - ambassador_idserver:idserver
   - elasticsearch_idserver:elasticsearch
   - redis_idserver:redis
  depends_on:
   - "postgresql_idserver"
   - elasticsearch_idserver
  environment:
   - DB_ALIAS=postgresql
   - DB_PORT=5432
 configuration_idserver:
  build:
   dockerfile: Dockerfile-Configuration-IdServer
   context: .
  links:
   - postgresql_configuration_idserver:postgresql
   - ambassador_idserver:idserver
   - elasticsearch_idserver:elasticsearch
   - redis_idserver:redis
   - postgresql_idserver:postgresql_idserver
  depends_on:
   - "postgresql_configuration_idserver"
   - elasticsearch_idserver
  environment:
   - DB_ALIAS=postgresql
   - DB_PORT=5432
 website_idserver:
  build:
   dockerfile: Dockerfile-WebSite
   context: .
  ports:
   - "4200:4200"
  links:
   - ambassador_idserver:idserver  
   - uma_idserver:uma
  environment:
   - SERVER=idserver
 websiteapi_idserver:
  build:
   dockerfile: Dockerfile-WebSiteApi
   context: .
  ports:
   - "5444:5444"
  links:
   - ambassador_idserver:idserver
   - uma_idserver:uma
   - manager_idserver:manager
   - configuration_idserver:configuration
   - mongo_idserver:mongo
  depends_on:
   - "mongo_idserver"
  environment:
   - INTROSPECTION_CLIENT_ID=website_api
   - INTROSPECTION_CLIENT_SECRET=website_api
   - OPENID_CONFIGURATION_URL=https://idserver:5443/.well-known/openid-configuration
 postgresql_idserver:
  image: postgres
  environment:
   - POSTGRES_USER=postgres
   - POSTGRES_PASSWORD=password
   - POSTGRES_DB=postgres
 postgresql_uma_idserver:
  image: postgres
  environment:
   - POSTGRES_USER=postgres
   - POSTGRES_PASSWORD=password
   - POSTGRES_DB=postgres
 postgresql_configuration_idserver:
  image: postgres
  environment:
   - POSTGRES_USER=postgres
   - POSTGRES_PASSWORD=password
   - POSTGRES_DB=postgres
 mongo_idserver:
  image: mongo
 elasticsearch_idserver:
  image: elasticsearch
  ports:
   - 9200:9200
 kibana_idserver:
  image: kibana
  ports:
   - 5601:5601
  environment:
   - ELASTICSEARCH_URL=http://elasticsearch:9200
  links:
   - elasticsearch_idserver:elasticsearch